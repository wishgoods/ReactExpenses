{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\expenses\\\\Expenses.js\";\nimport ExpenseItem from \"../expense-item/ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../expense-item/Card.js\";\nimport ExpenseFilter from \"../expenses-filter/ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  let options = [];\n\n  const FilterYearHandler = year => {\n    props.expenses.forEach(element => {\n      let year = new Date(element.date).getFullYear();\n\n      if (!options.includes(year)) {\n        options.push(year);\n      }\n    });\n    options = options.sort();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      options: options,\n      getYearToFilter: FilterYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: props.expenses.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(ExpenseItem, {\n              date: el.date,\n              title: String(el.title).toLowerCase(),\n              amount: el.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, el.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/01-starting-setup/01-starting-setup/src/components/expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpenseFilter","Expenses","props","options","FilterYearHandler","year","expenses","forEach","element","Date","date","getFullYear","includes","push","sort","map","el","String","title","toLowerCase","amount","id"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,6BAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;;;AAGA,MAAMC,QAAQ,GAAEC,KAAD,IAAU;AACvB,MAAIC,OAAO,GAAG,EAAd;;AAGA,QAAMC,iBAAiB,GAAEC,IAAD,IAAQ;AAC9BH,IAAAA,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,OAAO,IAAI;AAChC,UAAIH,IAAI,GAAG,IAAII,IAAJ,CAASD,OAAO,CAACE,IAAjB,EAAuBC,WAAvB,EAAX;;AAEA,UAAG,CAACR,OAAO,CAACS,QAAR,CAAiBP,IAAjB,CAAJ,EACA;AACEF,QAAAA,OAAO,CAACU,IAAR,CAAaR,IAAb;AACD;AACF,KAPD;AAQAF,IAAAA,OAAO,GAAEA,OAAO,CAACW,IAAR,EAAT;AACD,GAVD;;AAYA,sBAGE;AAAA,4BAAK,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEX,OAAxB;AAAiC,MAAA,eAAe,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAAL,eACA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA,6BAEE;AAAA,kBACGF,KAAK,CAACI,QAAN,CAAeS,GAAf,CAAoBC,EAAD,IAAQ;AAC1B,8BACE;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,IAAI,EAAEA,EAAE,CAACN,IADX;AAEE,cAAA,KAAK,EAAEO,MAAM,CAACD,EAAE,CAACE,KAAJ,CAAN,CAAiBC,WAAjB,EAFT;AAGE,cAAA,MAAM,EAAEH,EAAE,CAACI;AAHb;AAAA;AAAA;AAAA;AAAA;AADF,aAASJ,EAAE,CAACK,EAAZ;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAsBD,CAtCD;;KAAMpB,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import ExpenseItem from \"../expense-item/ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../expense-item/Card.js\";\r\nimport ExpenseFilter from \"../expenses-filter/ExpenseFilter\";\r\n\r\n\r\nconst Expenses=(props)=> {\r\n  let options = []\r\n  \r\n\r\n  const FilterYearHandler=(year)=>{\r\n    props.expenses.forEach(element => {\r\n      let year = new Date(element.date).getFullYear()\r\n      \r\n      if(!options.includes(year))\r\n      {\r\n        options.push(year);\r\n      }\r\n    });\r\n    options =options.sort();\r\n  }\r\n\r\n  return (\r\n    \r\n\r\n    <div><ExpenseFilter options={options} getYearToFilter={FilterYearHandler}></ExpenseFilter>\r\n    <Card className=\"expenses-container\">\r\n      \r\n      <ol>\r\n        {props.expenses.map((el) => {\r\n          return (\r\n            <li key={el.id}>\r\n              <ExpenseItem\r\n                date={el.date}\r\n                title={String(el.title).toLowerCase()}\r\n                amount={el.amount}\r\n              ></ExpenseItem>\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}