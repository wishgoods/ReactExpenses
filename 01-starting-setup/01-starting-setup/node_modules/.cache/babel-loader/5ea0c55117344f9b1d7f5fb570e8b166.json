{"ast":null,"code":"class apiService extends ServiceWorker {\n  constructor(props) {\n    super(props);\n\n    this.addExpense = expense => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(expense)\n      };\n      return fetch('http://localhost:5000/addNewExpense', requestOptions).then(response => response.json()).then(data => this.setState({\n        totalReactPackages: data.total\n      }));\n    };\n  }\n\n  async getExpenses() {\n    const response = await fetch(\"http://localhost:5000/getAllExpenses\");\n    const data = await response.json();\n    this.setState({\n      totalReactPackages: data.total\n    });\n    return data.data;\n  }\n\n}\n\nexport default apiService;","map":{"version":3,"sources":["C:/Users/admin/Downloads/01-starting-setup/01-starting-setup/src/services/apiService.js"],"names":["apiService","ServiceWorker","constructor","props","addExpense","expense","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","setState","totalReactPackages","total","getExpenses"],"mappings":"AACA,MAAMA,UAAN,SAAyBC,aAAzB,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAapBC,UAboB,GAaRC,OAAD,IAAY;AACrB,YAAMC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAHa,OAAvB;AAKA,aAAQO,KAAK,CAAC,qCAAD,EAAwCN,cAAxC,CAAL,CACHO,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHF,IAFG,CAEEG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,kBAAkB,EAAEF,IAAI,CAACG;AAA3B,OAAd,CAFV,CAAR;AAGH,KAtBqB;AAEjB;;AAEiB,QAAXC,WAAW,GAAG;AAErB,UAAMN,QAAQ,GAAG,MAAMF,KAAK,CAAC,sCAAD,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAT,EAAnB;AACA,SAAKE,QAAL,CAAc;AAAEC,MAAAA,kBAAkB,EAAEF,IAAI,CAACG;AAA3B,KAAd;AACA,WAAOH,IAAI,CAACA,IAAZ;AAEH;;AAZsC;;AAwBvC,eAAehB,UAAf","sourcesContent":["\r\nclass apiService extends ServiceWorker {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    async  getExpenses() {\r\n\r\n    const response = await fetch(\"http://localhost:5000/getAllExpenses\");\r\n    const data = await response.json();\r\n    this.setState({ totalReactPackages: data.total });\r\n    return data.data;\r\n     \r\n}\r\n\r\n  addExpense=(expense)=> {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(expense)\r\n    };\r\n    return  fetch('http://localhost:5000/addNewExpense', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ totalReactPackages: data.total}));\r\n}}\r\nexport default apiService;"]},"metadata":{},"sourceType":"module"}