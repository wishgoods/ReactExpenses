{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\ReactExpenses-main\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"../expense-item/ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../expense-item/Card.js\";\nimport ExpenseFilter from \"../expenses-filter/ExpenseFilter\";\nimport { useState } from \"react\";\nimport Footer from \"../Footer/Footer\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport NewExpense from \"../NewExpense/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  let options = [];\n  const [filtered_expenses, setFiltered] = useState(props.expenses);\n  let min_year = \"10000000000\";\n  let max_year = \"0\";\n  const [show_form, setShowForm] = useState(false);\n  props.expenses.forEach(element => {\n    let year = new Date(element.date).getFullYear(); // if (!options.includes(year)) {\n    //   options.push(year);\n    // }\n\n    if (year < min_year) {\n      min_year = year;\n    }\n\n    if (year > max_year) {\n      max_year = year;\n    }\n  });\n\n  for (let index = min_year; index <= max_year; index++) {\n    options.push(index);\n  }\n\n  options = options.sort();\n\n  const FilterYearHandler = year => {\n    if (String(year).includes('-')) {\n      setFiltered(props.expenses.sort((a, b) => {\n        var x = a[\"date\"];\n        var y = b[\"date\"];\n        return x < y ? -1 : x > y ? 1 : 0;\n      }));\n    } else {\n      setFiltered(props.expenses.filter(el => {\n        let el_year = new Date(el.date).getFullYear();\n        return String(el_year) === String(year);\n      }).sort((a, b) => {\n        var x = a[\"date\"];\n        var y = b[\"date\"];\n        return x < y ? -1 : x > y ? 1 : 0;\n      }));\n    }\n\n    return filtered_expenses;\n  };\n\n  const addExpenseHandler = expense => {\n    props.addExpenseHandler(expense);\n  };\n\n  const changeOnShow = () => {\n    setShowForm(!show_form);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card_and_filter\",\n    children: [show_form ? /*#__PURE__*/_jsxDEV(NewExpense, {\n      className: \"new-expense\",\n      onAddExpense: addExpenseHandler,\n      options: options,\n      changeOnShow: changeOnShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeOnShow,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 177\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 148\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      options: options,\n      getYearToFilter: FilterYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(ExpensesChart, {\n      expenses: filtered_expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroller\",\n          children: filtered_expenses.map(el => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(ExpenseItem, {\n                date: el.date,\n                title: String(el.title).toLowerCase(),\n                amount: el.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, el.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      title: \"Total Expenses Count : \",\n      expenses_count: filtered_expenses.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"e3gUvyDOlQBilSl8242HSwNX6QU=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/ReactExpenses-main/01-starting-setup/01-starting-setup/src/components/expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpenseFilter","useState","Footer","ExpensesChart","NewExpense","Expenses","props","options","filtered_expenses","setFiltered","expenses","min_year","max_year","show_form","setShowForm","forEach","element","year","Date","date","getFullYear","index","push","sort","FilterYearHandler","String","includes","a","b","x","y","filter","el","el_year","addExpenseHandler","expense","changeOnShow","map","title","toLowerCase","amount","id","length"],"mappings":"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","sourcesContent":["import ExpenseItem from \"../expense-item/ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../expense-item/Card.js\";\nimport ExpenseFilter from \"../expenses-filter/ExpenseFilter\";\nimport { useState } from \"react\";\nimport Footer from \"../Footer/Footer\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport NewExpense from \"../NewExpense/NewExpense\";\n\nconst Expenses = (props) => {\n  let options = [];\n  const [filtered_expenses, setFiltered] = useState(props.expenses);\n  let min_year =\"10000000000\"\n  let max_year = \"0\";\n  const [show_form, setShowForm] = useState(false);\n\n  \n  props.expenses.forEach((element) => {\n  \n    let year = new Date(element.date).getFullYear();\n\n    // if (!options.includes(year)) {\n    //   options.push(year);\n    // }\n    if(year<min_year)\n    {\n      min_year=year;\n    }\n    if(year>max_year)\n    {\n      max_year=year;\n    }\n  });\n  \n\nfor (let index = min_year; index <= max_year; index++) {\n  options.push(index);\n  \n}\n  options = options.sort();\n\n  const FilterYearHandler = (year) => {\n    \n    \n    if (String(year).includes('-')) {\n      setFiltered(\n        props.expenses.sort((a, b) => {\n          var x = a[\"date\"];\n          var y = b[\"date\"];\n          return x < y ? -1 : x > y ? 1 : 0;\n        })\n      );\n    }\n    else\n    {\n      setFiltered(\n      props.expenses\n        .filter((el) => {\n          let el_year = new Date(el.date).getFullYear();\n          return String(el_year)=== String(year);\n        })\n        .sort((a, b) => {\n          var x = a[\"date\"];\n          var y = b[\"date\"];\n          return x < y ? -1 : x > y ? 1 : 0;\n        })\n    );\n    }\n    return filtered_expenses;\n  };\n  const addExpenseHandler=(expense)=>{\n    \n    props.addExpenseHandler(expense);\n   \n  }\n  const changeOnShow=()=>{\n    setShowForm(\n      !show_form);\n  }\n \n\n  return (\n    \n    <div className=\"card_and_filter\">\n  \n      {show_form?<NewExpense className=\"new-expense\" onAddExpense={addExpenseHandler} options ={options} changeOnShow={changeOnShow}></NewExpense>:<div className=\"new-expense\"><button  onClick={changeOnShow}>Add Expense</button></div>}\n          \n      <ExpenseFilter\n      options={options}\n       \n        getYearToFilter={FilterYearHandler}\n      ></ExpenseFilter>\n     \n     {} <ExpensesChart  expenses = {filtered_expenses}/>\n \n      <Card className=\"expenses-container\">\n        <ol>\n          <div className=\"scroller\">\n          {filtered_expenses.map((el) => {\n            return (\n              <li key={el.id}>\n                <ExpenseItem\n                  date={el.date}\n                  title={String(el.title).toLowerCase()}\n                  amount={el.amount}\n                ></ExpenseItem>\n              </li>\n            );\n          })}\n          </div>\n        </ol>\n      </Card>\n    <Footer title=\"Total Expenses Count : \" expenses_count={filtered_expenses.length}></Footer>\n\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}