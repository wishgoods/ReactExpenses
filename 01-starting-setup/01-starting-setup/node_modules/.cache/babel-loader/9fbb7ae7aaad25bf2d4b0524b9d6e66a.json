{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\App.js\";\nimport Expenses from \"./components/expenses/Expenses.js\";\nimport { Helmet } from \"react-helmet\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.expenses = [];\n    this.allExpenses = [];\n\n    this.addExpenseHandler = expense => {\n      this.expenses.push(expense);\n      this.setState({\n        totalReactPackages: this.expenses\n      });\n      this.addNewExpense(expense);\n    };\n\n    this.yearChangedHandler = year => {\n      this.expenses = this.allExpenses.filter(el => {\n        let el_year = new Date(el.date).getFullYear();\n        return el_year === year;\n      });\n      this.setState({\n        totalReactPackages: this.expenses\n      });\n    };\n\n    this.state = {\n      totalReactPackages: null\n    };\n    this.componentDidMount();\n  }\n\n  async addNewExpense(expense) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(expense)\n    };\n    fetch('http://localhost:5000/addNewExpense', requestOptions).then(response => response.json()).then(data => this.setState({\n      totalReactPackages: data.total\n    }));\n  }\n\n  async componentDidMount() {\n    // GET request using fetch with async/await\n    const response = await fetch(\"http://localhost:5000/getAllExpenses\");\n    const data = await response.json();\n    this.setState({\n      totalReactPackages: data.total\n    });\n    this.expenses = data.data;\n    this.allExpenses = data.data;\n  }\n\n  render() {\n    const {\n      totalReactPackages\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Expenses Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"description\",\n          content: \"App Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"theme-color\",\n          content: \"#008f68\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewExpense, {\n        onAddExpense: this.addExpenseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n        expenses: this.allExpenses,\n        yearChanged: this.yearChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/admin/Downloads/01-starting-setup/01-starting-setup/src/App.js"],"names":["Expenses","Helmet","NewExpense","React","App","Component","constructor","props","expenses","allExpenses","addExpenseHandler","expense","push","setState","totalReactPackages","addNewExpense","yearChangedHandler","year","filter","el","el_year","Date","date","getFullYear","state","componentDidMount","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","total","render"],"mappings":"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","sourcesContent":["import Expenses from \"./components/expenses/Expenses.js\";\nimport { Helmet } from \"react-helmet\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport React from \"react\";\n\n\nclass App extends React.Component {\n  expenses = [];\n  allExpenses=  [];\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalReactPackages: null,\n    };\n    this.componentDidMount();\n  }\n  addExpenseHandler = (expense) => {\n    this.expenses.push(expense);\n    this.setState({ totalReactPackages: this.expenses });\n    this.addNewExpense(expense);\n  };\n  yearChangedHandler = (year) => {\n    this.expenses =this.allExpenses.filter((el) => {\n      let el_year = new Date(el.date).getFullYear();\n      return el_year=== year;\n    });\n    this.setState({ totalReactPackages: this.expenses });\n\n  };\n\n  async addNewExpense(expense)\n  {\n    const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(expense)\n      };\n      fetch('http://localhost:5000/addNewExpense', requestOptions)\n          .then(response => response.json())\n          .then(data => this.setState({ totalReactPackages: data.total}));\n  }\n  async componentDidMount() {\n    // GET request using fetch with async/await\n    \n      const response = await fetch(\"http://localhost:5000/getAllExpenses\");\n      const data = await response.json();\n      this.setState({ totalReactPackages: data.total });\n      this.expenses = data.data;\n      this.allExpenses = data.data;\n  \n  }\n\n\n  render() {\n    const { totalReactPackages } = this.state;\n    return (\n      <div>\n        <Helmet>\n          <title>Expenses Manager</title>\n          <meta name=\"description\" content=\"App Description\" />\n          <meta name=\"theme-color\" content=\"#008f68\" />\n        </Helmet>\n        <NewExpense onAddExpense={this.addExpenseHandler}></NewExpense>\n        <Expenses\n          expenses={this.allExpenses}\n          yearChanged={this.yearChangedHandler}\n        ></Expenses>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}