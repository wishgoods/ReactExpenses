{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpenseForm.css\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const titleChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...userInput,\n        enterdTitle: event.target.value\n      };\n    });\n  };\n\n  const amountChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...userInput,\n        enterdAmount: event.target.value\n      };\n    });\n  };\n\n  const dateChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...userInput,\n        enterdDate: event.target.value\n      };\n    });\n  };\n\n  const [userInput, setUserInput] = useState({\n    enterdTitle: \"\",\n    enterdAmount: \"\",\n    enterdDate: \"\"\n  });\n  const {\n    handleSubmit\n  } = useForm();\n  const [no_values = [], setNoValues] = useState(false);\n\n  const submitHandler = event => {\n    //event.prevetDefault();//prevents page reload\n    if (userInput.enterdTitle.length > 0 && userInput.enterdAmount.length > 0 && userInput.enterdDate.length > 0) {\n      const expenseData = {\n        title: userInput.enterdTitle,\n        amount: userInput.enterdAmount,\n        date: new Date(userInput.enterdDate)\n      };\n      props.onSaveExpenseData(expenseData);\n      userInput.enterdTitle = \"\";\n      userInput.enterdAmount = \"\";\n      userInput.enterdDate = \"\";\n      setNoValues(false);\n    } else {\n      setNoValues(true);\n    }\n  };\n\n  const handleClick = e => {\n    console.log(e.detail);\n\n    if (e.detail == 2) {\n      props.changeOnShow();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(submitHandler),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput.enterdTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: userInput.enterdAmount,\n          onChange: amountChangeHandler,\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: userInput.enterdDate,\n          onChange: dateChangeHandler,\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2025-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleClick,\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), no_values ? /*#__PURE__*/_jsxDEV(\"small\", {\n      children: \"Values Missing, Alert was not added!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 70\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"FLSoyotRkI/HKHKuSjpx2j3Kbmo=\", false, function () {\n  return [useForm];\n});\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/01-starting-setup/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","useForm","ExpenseForm","props","titleChangeHandler","event","setUserInput","prevState","userInput","enterdTitle","target","value","amountChangeHandler","enterdAmount","dateChangeHandler","enterdDate","handleSubmit","no_values","setNoValues","submitHandler","length","expenseData","title","amount","date","Date","onSaveExpenseData","handleClick","e","console","log","detail","changeOnShow"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpCC,IAAAA,YAAY,CAAEC,SAAD,IAAe;AAC1B,aAAO,EAAE,GAAGC,SAAL;AAAgBC,QAAAA,WAAW,EAAEJ,KAAK,CAACK,MAAN,CAAaC;AAA1C,OAAP;AACD,KAFW,CAAZ;AAGD,GAJD;;AAKA,QAAMC,mBAAmB,GAAIP,KAAD,IAAW;AACrCC,IAAAA,YAAY,CAAEC,SAAD,IAAe;AAC1B,aAAO,EAAE,GAAGC,SAAL;AAAgBK,QAAAA,YAAY,EAAER,KAAK,CAACK,MAAN,CAAaC;AAA3C,OAAP;AACD,KAFW,CAAZ;AAGD,GAJD;;AAKA,QAAMG,iBAAiB,GAAIT,KAAD,IAAW;AACnCC,IAAAA,YAAY,CAAEC,SAAD,IAAe;AAE1B,aAAO,EAAE,GAAGC,SAAL;AAAgBO,QAAAA,UAAU,EAAEV,KAAK,CAACK,MAAN,CAAaC;AAAzC,OAAP;AACD,KAHW,CAAZ;AAID,GALD;;AAOA,QAAM,CAACH,SAAD,EAAYF,YAAZ,IAA4BN,QAAQ,CAAC;AACzCS,IAAAA,WAAW,EAAE,EAD4B;AAEzCI,IAAAA,YAAY,EAAE,EAF2B;AAGzCE,IAAAA,UAAU,EAAE;AAH6B,GAAD,CAA1C;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAkBf,OAAO,EAA/B;AAEA,QAAM,CAACgB,SAAS,GAAC,EAAX,EAAcC,WAAd,IAA6BlB,QAAQ,CAAC,KAAD,CAA3C;;AAEA,QAAMmB,aAAa,GAAId,KAAD,IAAW;AAE/B;AACD,QAAGG,SAAS,CAACC,WAAV,CAAsBW,MAAtB,GAA6B,CAA7B,IAAkCZ,SAAS,CAACK,YAAV,CAAuBO,MAAvB,GAA8B,CAAhE,IAAqEZ,SAAS,CAACO,UAAV,CAAqBK,MAArB,GAA4B,CAApG,EAAuG;AACtG,YAAMC,WAAW,GAAC;AAChBC,QAAAA,KAAK,EAACd,SAAS,CAACC,WADA;AAEhBc,QAAAA,MAAM,EAAEf,SAAS,CAACK,YAFF;AAGhBW,QAAAA,IAAI,EAAC,IAAIC,IAAJ,CAASjB,SAAS,CAACO,UAAnB;AAHW,OAAlB;AAMAZ,MAAAA,KAAK,CAACuB,iBAAN,CAAwBL,WAAxB;AACAb,MAAAA,SAAS,CAACC,WAAV,GAAuB,EAAvB;AACAD,MAAAA,SAAS,CAACK,YAAV,GAAuB,EAAvB;AACAL,MAAAA,SAAS,CAACO,UAAV,GAAsB,EAAtB;AACAG,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAZA,MAaG;AACFA,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AAEA,GApBD;;AAqBA,QAAMS,WAAW,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;;AACA,QAAGH,CAAC,CAACG,MAAF,IAAY,CAAf,EACA;AACE5B,MAAAA,KAAK,CAAC6B,YAAN;AACD;AACF,GAND;;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAEhB,YAAY,CAACG,aAAD,CAA5B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEX,SAAS,CAACC,WAApC;AAAiD,UAAA,QAAQ,EAAEL;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,KAAK,EAAEI,SAAS,CAACK,YAAxB;AACE,UAAA,QAAQ,EAAED,mBADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,GAAG,EAAC,MAHN;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAcE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,KAAK,EAAEJ,SAAS,CAACO,UAAxB;AACE,UAAA,QAAQ,EAAED,iBADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,GAAG,EAAC,YAHN;AAIE,UAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAyBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEa,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,EA0BGV,SAAS,gBAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAD,gBAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BjE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAtFD;;GAAMf,W;UAuBoBD,O;;;KAvBpBC,W;AAwFN,eAAeA,WAAf","sourcesContent":["import \"./ExpenseForm.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const titleChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...userInput, enterdTitle: event.target.value };\r\n    });\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...userInput, enterdAmount: event.target.value };\r\n    });\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      \r\n      return { ...userInput, enterdDate: event.target.value };\r\n    });\r\n  };\r\n \r\n  const [userInput, setUserInput] = useState({\r\n    enterdTitle: \"\",\r\n    enterdAmount: \"\",\r\n    enterdDate: \"\",\r\n  });\r\n  const { handleSubmit} = useForm();\r\n\r\n  const [no_values=[],setNoValues] = useState(false);\r\n\r\n  const submitHandler = (event) => {\r\n    \r\n    //event.prevetDefault();//prevents page reload\r\n   if(userInput.enterdTitle.length>0 && userInput.enterdAmount.length>0 && userInput.enterdDate.length>0 ){\r\n    const expenseData={\r\n      title:userInput.enterdTitle,\r\n      amount: userInput.enterdAmount,\r\n      date:new Date(userInput.enterdDate)\r\n    }\r\n    \r\n    props.onSaveExpenseData(expenseData);\r\n    userInput.enterdTitle =\"\"\r\n    userInput.enterdAmount=\"\"\r\n    userInput.enterdDate= \"\"\r\n    setNoValues(false)\r\n  }\r\n  else{\r\n    setNoValues(true)\r\n  }\r\n \r\n  };\r\n  const handleClick = (e) => {\r\n    console.log(e.detail);\r\n    if(e.detail == 2)\r\n    {\r\n      props.changeOnShow();\r\n    }\r\n  }\r\n \r\n  return (\r\n    <form onSubmit={handleSubmit(submitHandler)} >\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={userInput.enterdTitle} onChange={titleChangeHandler}></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input value={userInput.enterdAmount}\r\n            onChange={amountChangeHandler}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input value={userInput.enterdDate}\r\n            onChange={dateChangeHandler}\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2025-12-31\"\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" onClick={handleClick}>Add Expense</button>\r\n      {no_values?<small>Values Missing, Alert was not added!</small>:<small> </small>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}