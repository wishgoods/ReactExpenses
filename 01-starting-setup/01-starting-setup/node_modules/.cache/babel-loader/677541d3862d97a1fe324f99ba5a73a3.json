{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\App.js\";\nimport Expenses from \"./components/expenses/Expenses.js\";\nimport { Helmet } from \"react-helmet\";\nimport NewExpense from \"./components/NewExpense/NewExpense\"; //import expenses from  \"./data/expenses.json\"\n\nimport React from \"react\"; // function App() {\n//   const addExpenseHandler = expense=>{\n//     expenses.push(expense)\n//   }\n//   const yearChangedHandler= year=>{\n//       console.log(year)\n//   }\n// return(\n//   <div>\n//      <Helmet>\n//         <title>Expenses Manager</title>\n//         <meta name=\"description\" content=\"App Description\" />\n//         <meta name=\"theme-color\" content=\"#008f68\" />\n//       </Helmet>\n//       <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n//   <Expenses  expenses={expenses} yearChanged={yearChangedHandler}></Expenses>\n//   </div>\n// );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.expenses = [];\n\n    this.addExpenseHandler = expense => {\n      this.expenses.push(expense);\n      this.setState({\n        totalReactPackages: this.expenses\n      });\n    };\n\n    this.yearChangedHandler = year => {\n      this.expenses.filter(el => {\n        let el_year = new Date(el.date).getFullYear();\n        return el_year == year;\n      });\n      this.setState({\n        totalReactPackages: this.expenses\n      });\n    };\n\n    this.state = {\n      totalReactPackages: null\n    };\n    this.componentDidMount(\"get\");\n  }\n\n  async componentDidMount(action, data) {\n    // GET request using fetch with async/await\n    if (action == \"get\") {\n      const response = await fetch(\"http://localhost:5000/getAllExpenses\");\n      const data = await response.json();\n      this.setState({\n        totalReactPackages: data.total\n      });\n      this.expenses = data.data;\n    } else if (action == 'add') {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('http://localhost:5000/addNewExpense', requestOptions).then(response => response.json()).then(data => this.setState({\n        data: this.expenses\n      }));\n    }\n  }\n\n  render() {\n    const {\n      totalReactPackages\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Expenses Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"description\",\n          content: \"App Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"theme-color\",\n          content: \"#008f68\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewExpense, {\n        onAddExpense: this.addExpenseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n        expenses: this.expenses,\n        yearChanged: this.yearChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/admin/Downloads/01-starting-setup/01-starting-setup/src/App.js"],"names":["Expenses","Helmet","NewExpense","React","App","Component","constructor","props","expenses","addExpenseHandler","expense","push","setState","totalReactPackages","yearChangedHandler","year","filter","el","el_year","Date","date","getFullYear","state","componentDidMount","action","data","response","fetch","json","total","requestOptions","method","headers","body","JSON","stringify","then","render"],"mappings":"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","sourcesContent":["import Expenses from \"./components/expenses/Expenses.js\";\nimport { Helmet } from \"react-helmet\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n//import expenses from  \"./data/expenses.json\"\nimport React from \"react\";\n// function App() {\n//   const addExpenseHandler = expense=>{\n//     expenses.push(expense)\n\n//   }\n//   const yearChangedHandler= year=>{\n\n//       console.log(year)\n\n//   }\n\n// return(\n\n//   <div>\n//      <Helmet>\n//         <title>Expenses Manager</title>\n//         <meta name=\"description\" content=\"App Description\" />\n//         <meta name=\"theme-color\" content=\"#008f68\" />\n//       </Helmet>\n//       <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n//   <Expenses  expenses={expenses} yearChanged={yearChangedHandler}></Expenses>\n//   </div>\n// );\n// }\n\nclass App extends React.Component {\n  expenses = [];\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalReactPackages: null,\n    };\n    this.componentDidMount(\"get\");\n  }\n  addExpenseHandler = (expense) => {\n    this.expenses.push(expense);\n    this.setState({ totalReactPackages: this.expenses });\n  };\n  yearChangedHandler = (year) => {\n    this.expenses.filter((el) => {\n      let el_year = new Date(el.date).getFullYear();\n      return el_year == year;\n    });\n    this.setState({ totalReactPackages: this.expenses });\n  };\n\n  async componentDidMount(action,data) {\n    // GET request using fetch with async/await\n    if ((action == \"get\")) {\n      const response = await fetch(\"http://localhost:5000/getAllExpenses\");\n      const data = await response.json();\n      this.setState({ totalReactPackages: data.total });\n      this.expenses = data.data;\n    }\n    else if (action == 'add')\n    {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n    };\n    fetch('http://localhost:5000/addNewExpense', requestOptions)\n        .then(response => response.json())\n        .then(data => this.setState({ data: this.expenses}));\n    }\n  }\n\n  render() {\n    const { totalReactPackages } = this.state;\n    return (\n      <div>\n        <Helmet>\n          <title>Expenses Manager</title>\n          <meta name=\"description\" content=\"App Description\" />\n          <meta name=\"theme-color\" content=\"#008f68\" />\n        </Helmet>\n        <NewExpense onAddExpense={this.addExpenseHandler}></NewExpense>\n        <Expenses\n          expenses={this.expenses}\n          yearChanged={this.yearChangedHandler}\n        ></Expenses>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}