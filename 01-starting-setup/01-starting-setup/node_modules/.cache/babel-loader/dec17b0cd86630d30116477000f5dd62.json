{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"../expense-item/ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../expense-item/Card.js\";\nimport ExpenseFilter from \"../expenses-filter/ExpenseFilter\";\nimport { useState } from \"react\";\nimport Footer from \"../Footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  let options = [];\n  const [filtered_expenses, setFiltered] = useState(props.expenses);\n  props.expenses.forEach(element => {\n    let year = new Date(element.date).getFullYear();\n\n    if (!options.includes(year)) {\n      options.push(year);\n    }\n  });\n  options = options.sort();\n\n  const FilterYearHandler = year => {\n    if (year === \"All Expenses\") {\n      setFiltered(props.expenses.sort((a, b) => {\n        var x = a[\"date\"];\n        var y = b[\"date\"];\n        return x < y ? -1 : x > y ? 1 : 0;\n      }));\n    } else {\n      setFiltered(props.expenses.filter(el => {\n        let el_year = new Date(el.date).getFullYear();\n        return el_year == year;\n      }).sort((a, b) => {\n        var x = a[\"date\"];\n        var y = b[\"date\"];\n        return x < y ? -1 : x > y ? 1 : 0;\n      }));\n    }\n\n    return filtered_expenses;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card_and_filter\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      options: options,\n      getYearToFilter: FilterYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroller\",\n          children: filtered_expenses.map(el => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(ExpenseItem, {\n                date: el.date,\n                title: String(el.title).toLowerCase(),\n                amount: el.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, el.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      title: \"Total Expenses Count : \",\n      expenses_count: expenses.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"Df3Xk0mP4ThW1JiczFuSd8q0Rgc=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/01-starting-setup/01-starting-setup/src/components/expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpenseFilter","useState","Footer","Expenses","props","options","filtered_expenses","setFiltered","expenses","forEach","element","year","Date","date","getFullYear","includes","push","sort","FilterYearHandler","a","b","x","y","filter","el","el_year","map","String","title","toLowerCase","amount","id","length"],"mappings":"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","sourcesContent":["import ExpenseItem from \"../expense-item/ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../expense-item/Card.js\";\r\nimport ExpenseFilter from \"../expenses-filter/ExpenseFilter\";\r\nimport { useState } from \"react\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst Expenses = (props) => {\r\n  let options = [];\r\n  const [filtered_expenses, setFiltered] = useState(props.expenses);\r\n\r\n  props.expenses.forEach((element) => {\r\n    let year = new Date(element.date).getFullYear();\r\n\r\n    if (!options.includes(year)) {\r\n      options.push(year);\r\n    }\r\n  });\r\n  options = options.sort();\r\n\r\n  const FilterYearHandler = (year) => {\r\n    \r\n    \r\n    if (year === \"All Expenses\") {\r\n      setFiltered(\r\n        props.expenses.sort((a, b) => {\r\n          var x = a[\"date\"];\r\n          var y = b[\"date\"];\r\n          return x < y ? -1 : x > y ? 1 : 0;\r\n        })\r\n      );\r\n    }\r\n    else\r\n    {\r\n      setFiltered(\r\n      props.expenses\r\n        .filter((el) => {\r\n          let el_year = new Date(el.date).getFullYear();\r\n          return el_year == year;\r\n        })\r\n        .sort((a, b) => {\r\n          var x = a[\"date\"];\r\n          var y = b[\"date\"];\r\n          return x < y ? -1 : x > y ? 1 : 0;\r\n        })\r\n    );\r\n    }\r\n    return filtered_expenses;\r\n  };\r\n  \r\n  return (\r\n    <div className=\"card_and_filter\">\r\n      <ExpenseFilter\r\n        options={options}\r\n        getYearToFilter={FilterYearHandler}\r\n      ></ExpenseFilter>\r\n      <Card className=\"expenses-container\">\r\n        <ol>\r\n          <div className=\"scroller\">\r\n          {filtered_expenses.map((el) => {\r\n            return (\r\n              <li key={el.id}>\r\n                <ExpenseItem\r\n                  date={el.date}\r\n                  title={String(el.title).toLowerCase()}\r\n                  amount={el.amount}\r\n                ></ExpenseItem>\r\n              </li>\r\n            );\r\n          })}\r\n          </div>\r\n        </ol>\r\n      </Card>\r\n    <Footer title=\"Total Expenses Count : \" expenses_count={expenses.length}></Footer>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}