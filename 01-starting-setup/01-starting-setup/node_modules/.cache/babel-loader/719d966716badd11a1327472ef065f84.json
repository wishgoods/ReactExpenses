{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\ReactExpenses-main\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\App.js\";\nimport Expenses from \"./components/expenses/Expenses.js\";\nimport { Helmet, HelmetProvider } from 'react-helmet-async'; //import NewExpense from \"./components/NewExpense/NewExpense\";\n//import Header from \"./components/Header/Header\";\n\nimport React from \"react\"; //import Footer from \"./components/Footer/Footer.js\";\n\nimport './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //   totalReactPackages: null,\n    // };\n\n    this.expenses = [];\n    this.renders = 0;\n\n    this.addExpenseHandler = expense => {\n      this.expenses.push(expense);\n      this.addNewExpense(expense);\n      this.setState({\n        expenses: this.expenses\n      });\n    };\n\n    this.componentDidMount();\n  }\n\n  async addNewExpense(expense) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(expense)\n    };\n    fetch(\"http://localhost:5000/addNewExpense\", requestOptions).then(response => response.json());\n    this.componentDidMount();\n  }\n\n  async componentDidMount() {\n    // GET request using fetch with async/await\n    const response = await fetch(\"http://localhost:5000/getAllExpenses\");\n    const data = await response.json();\n    this.expenses = data.data;\n  }\n\n  render() {\n    //const { totalReactPackages } = this.state;\n    this.setState({\n      expenses: this.expenses\n    });\n    return /*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-cotntainer\",\n        children: [/*#__PURE__*/_jsxDEV(Helmet, {\n          children: [/*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"Expenses Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n            name: \"description\",\n            content: \"App Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n            name: \"theme-color\",\n            content: \"#008f68\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n          expenses: this.expenses,\n          addExpenseHandler: this.addExpenseHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/admin/Downloads/ReactExpenses-main/01-starting-setup/01-starting-setup/src/App.js"],"names":["Expenses","Helmet","HelmetProvider","React","App","Component","constructor","props","expenses","renders","addExpenseHandler","expense","push","addNewExpense","setState","componentDidMount","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","render"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,mCAArB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,oBAAvC,C,CAEA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,SAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAIhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;AACA;AACA;;AALiB,SAHnBC,QAGmB,GAHR,EAGQ;AAAA,SAFnBC,OAEmB,GAFT,CAES;;AAAA,SAQnBC,iBARmB,GAQEC,OAAD,IAAa;AAC/B,WAAKH,QAAL,CAAcI,IAAd,CAAmBD,OAAnB;AAEA,WAAKE,aAAL,CAAmBF,OAAnB;AACA,WAAKG,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAE,KAAKA;AAAjB,OAAd;AACD,KAbkB;;AAMjB,SAAKO,iBAAL;AACD;;AAQkB,QAAbF,aAAa,CAACF,OAAD,EAAU;AAC3B,UAAMK,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,OAAf;AAHe,KAAvB;AAKAW,IAAAA,KAAK,CAAC,qCAAD,EAAwCN,cAAxC,CAAL,CACGO,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB;AAGA,SAAKV,iBAAL;AAED;;AAEsB,QAAjBA,iBAAiB,GAAG;AACxB;AAEA,UAAMS,QAAQ,GAAG,MAAMF,KAAK,CAAC,sCAAD,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAT,EAAnB;AAEA,SAAKjB,QAAL,GAAgBkB,IAAI,CAACA,IAArB;AAED;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,SAAKb,QAAL,CAAc;AAAEN,MAAAA,QAAQ,EAAE,KAAKA;AAAjB,KAAd;AACA,wBACI,QAAC,cAAD;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACF,QAAC,MAAD;AAAA,kCACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADN,eAEM;AAAM,YAAA,IAAI,EAAC,aAAX;AAAyB,YAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFN,eAGM;AAAM,YAAA,IAAI,EAAC,aAAX;AAAyB,YAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,eAQE,QAAC,QAAD;AAAW,UAAA,QAAQ,EAAE,KAAKA,QAA1B;AAAoC,UAAA,iBAAiB,EAAE,KAAKE;AAA5D;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBD;;AA7D+B;;AAgElC,eAAeN,GAAf","sourcesContent":["import Expenses from \"./components/expenses/Expenses.js\";\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\n//import NewExpense from \"./components/NewExpense/NewExpense\";\n//import Header from \"./components/Header/Header\";\nimport React from \"react\";\n//import Footer from \"./components/Footer/Footer.js\";\nimport './index'\n\nclass App extends React.Component {\n  expenses = [];\n  renders = 0;\n  \n  constructor(props) {\n    super(props);\n\n    // this.state = {\n    //   totalReactPackages: null,\n    // };\n    this.componentDidMount();\n  }\n  addExpenseHandler = (expense) => {\n    this.expenses.push(expense);\n    \n    this.addNewExpense(expense);\n    this.setState({ expenses: this.expenses });\n  };\n\n  async addNewExpense(expense) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(expense),\n    };\n    fetch(\"http://localhost:5000/addNewExpense\", requestOptions)\n      .then((response) => response.json())\n   \n    this.componentDidMount();\n    \n  }\n\n  async componentDidMount() {\n    // GET request using fetch with async/await\n\n    const response = await fetch(\"http://localhost:5000/getAllExpenses\");\n    const data = await response.json();\n    \n    this.expenses = data.data;\n    \n  }\n\n  render() {\n    //const { totalReactPackages } = this.state;\n    this.setState({ expenses: this.expenses });\n    return (\n        <HelmetProvider>\n        <div className=\"content-cotntainer\">\n      <Helmet>\n            <title>Expenses Manager</title>\n            <meta name=\"description\" content=\"App Description\" />\n            <meta name=\"theme-color\" content=\"#008f68\" />\n        \n          {/* <Header title=\"Expenses List Manager\"></Header> */}\n          </Helmet>\n          <Expenses  expenses={this.expenses} addExpenseHandler={this.addExpenseHandler}></Expenses>\n        </div>\n        </HelmetProvider>\n        \n    \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}