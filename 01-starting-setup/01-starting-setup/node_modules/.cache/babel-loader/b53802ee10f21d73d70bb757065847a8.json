{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Expenses from \"./components/expenses/Expenses.js\";\nimport { Helmet } from \"react-helmet\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport React, { useEffect, useState } from 'react';\nimport * as apiService from './services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //expenses = [];\n  // itemInput;\n  // setItemInput;\n  // expenses;\n  // setExpenses;\n  //constructor(props) {\n  //super(props);\n  const [itemInput, setItemInput] = useState('');\n  const [expenses, setExpenses] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    apiService.getExpenses().then(items => {\n      if (mounted) {\n        setExpenses(items);\n      }\n    });\n    return () => mounted = false;\n  }, []); //     this.state = {\n  //       totalReactPackages: null,\n  //     };\n  //     this.componentDidMount();\n  //  // }\n\n  const addExpenseHandler = expense => {\n    this.expenses.push(expense);\n    this.setState({\n      totalReactPackages: this.expenses\n    });\n    this.addNewExpense(expense);\n  }; // async addNewExpense(expense)\n  // {\n  //   const requestOptions = {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify(expense)\n  //     };\n  //     fetch('http://localhost:5000/addNewExpense', requestOptions)\n  //         .then(response => response.json())\n  //         .then(data => this.setState({ totalReactPackages: data.total}));\n  // }\n  // async componentDidMount() {\n  //   // GET request using fetch with async/await\n  //     const response = await fetch(\"http://localhost:5000/getAllExpenses\");\n  //     const data = await response.json();\n  //     this.setState({ totalReactPackages: data.total });\n  //     this.expenses = data.data;\n  // }\n  // render() {\n  //const { totalReactPackages } = this.state;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Expenses Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"App Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"theme-color\",\n        content: \"#008f68\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: this.addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      expenses: this.expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this); //}\n};\n\n_s(App, \"tkir8bC/q0faIkdyZnBuBijmqXo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/01-starting-setup/01-starting-setup/src/App.js"],"names":["Expenses","Helmet","NewExpense","React","useEffect","useState","apiService","App","itemInput","setItemInput","expenses","setExpenses","mounted","getExpenses","then","items","addExpenseHandler","expense","push","setState","totalReactPackages","addNewExpense"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mCAArB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,UAAZ,MAA4B,uBAA5B;;;AAEA,MAAMC,GAAG,GAAE,MAAK;AAAA;;AACd;AACA;AACA;AACA;AACA;AAEA;AACE;AACD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACC,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,OAAO,GAAG,IAAd;AACAN,IAAAA,UAAU,CAACO,WAAX,GACGC,IADH,CACQC,KAAK,IAAI;AACb,UAAGH,OAAH,EAAY;AACVD,QAAAA,WAAW,CAACI,KAAD,CAAX;AACD;AACF,KALH;AAMA,WAAO,MAAMH,OAAO,GAAG,KAAvB;AACD,GATQ,EASN,EATM,CAAT,CAZY,CAsBhB;AACA;AACA;AACA;AACA;;AACE,QAAMI,iBAAiB,GAAIC,OAAD,IAAa;AACrC,SAAKP,QAAL,CAAcQ,IAAd,CAAmBD,OAAnB;AACA,SAAKE,QAAL,CAAc;AAAEC,MAAAA,kBAAkB,EAAE,KAAKV;AAA3B,KAAd;AACA,SAAKW,aAAL,CAAmBJ,OAAnB;AACD,GAJD,CA3Bc,CAiCd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGD;AACG;;;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKD;AAA/B;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAE,KAAKN;AADjB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA1DY,CAwEd;AACD,CAzED;;GAAMH,G;;KAAAA,G;AA2EN,eAAeA,GAAf","sourcesContent":["import Expenses from \"./components/expenses/Expenses.js\";\nimport { Helmet } from \"react-helmet\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport React, { useEffect, useState } from 'react';\nimport * as apiService from './services/apiService'\n\nconst App= () =>{\n  //expenses = [];\n  // itemInput;\n  // setItemInput;\n  // expenses;\n  // setExpenses;\n\n  //constructor(props) {\n    //super(props);\n   const [itemInput, setItemInput] = useState('');\n    const [expenses, setExpenses] = useState([]);\n\n    useEffect(() => {\n      let mounted = true;\n      apiService.getExpenses()\n        .then(items => {\n          if(mounted) {\n            setExpenses(items)\n          }\n        })\n      return () => mounted = false;\n    }, [])\n//     this.state = {\n//       totalReactPackages: null,\n//     };\n//     this.componentDidMount();\n//  // }\n  const addExpenseHandler = (expense) => {\n    this.expenses.push(expense);\n    this.setState({ totalReactPackages: this.expenses });\n    this.addNewExpense(expense);\n  };\n\n  // async addNewExpense(expense)\n  // {\n  //   const requestOptions = {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify(expense)\n  //     };\n  //     fetch('http://localhost:5000/addNewExpense', requestOptions)\n  //         .then(response => response.json())\n  //         .then(data => this.setState({ totalReactPackages: data.total}));\n          \n  // }\n  // async componentDidMount() {\n  //   // GET request using fetch with async/await\n    \n  //     const response = await fetch(\"http://localhost:5000/getAllExpenses\");\n  //     const data = await response.json();\n  //     this.setState({ totalReactPackages: data.total });\n  //     this.expenses = data.data;\n  \n  // }\n\n\n // render() {\n    //const { totalReactPackages } = this.state;\n    return (\n      <div>\n        <Helmet>\n          <title>Expenses Manager</title>\n          <meta name=\"description\" content=\"App Description\" />\n          <meta name=\"theme-color\" content=\"#008f68\" />\n        </Helmet>\n        <NewExpense onAddExpense={this.addExpenseHandler}></NewExpense>\n        <Expenses\n          expenses={this.expenses}\n          \n        ></Expenses>\n      </div>\n    );\n  //}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}