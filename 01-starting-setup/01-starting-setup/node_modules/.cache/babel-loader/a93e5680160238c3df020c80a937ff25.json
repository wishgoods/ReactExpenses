{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"../expense-item/ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../expense-item/Card.js\";\nimport ExpenseFilter from \"../expenses-filter/ExpenseFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  let options = [];\n  let filtered_expenses = [];\n  const [statesman, setStatesMan] = useState(' ');\n  props.expenses.forEach(element => {\n    let year = new Date(element.date).getFullYear();\n\n    if (!options.includes(year)) {\n      options.push(year);\n    }\n  });\n  options = options.sort();\n\n  const FilterYearHandler = year => {\n    //props.yearChanged(year)\n    filtered_expenses = props.expenses.filter(el => {\n      let el_year = new Date(el.date).getFullYear();\n      return el_year == year;\n    });\n    setStatesMan(year);\n    console.log(filtered_expenses);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      options: options,\n      getYearToFilter: FilterYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: filtered_expenses.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(ExpenseItem, {\n              date: el.date,\n              title: String(el.title).toLowerCase(),\n              amount: el.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, el.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"SAVfuIcoLyIrX52tqbOfwXCS08o=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/01-starting-setup/01-starting-setup/src/components/expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpenseFilter","useState","Expenses","props","options","filtered_expenses","statesman","setStatesMan","expenses","forEach","element","year","Date","date","getFullYear","includes","push","sort","FilterYearHandler","filter","el","el_year","console","log","map","String","title","toLowerCase","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,6BAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,QAAQ,GAAEC,KAAD,IAAU;AAAA;;AAEvB,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACA,QAAK,CAACC,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,GAAD,CAAxC;AACAE,EAAAA,KAAK,CAACK,QAAN,CAAeC,OAAf,CAAuBC,OAAO,IAAI;AAChC,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAACG,IAAjB,EAAuBC,WAAvB,EAAX;;AAEA,QAAG,CAACV,OAAO,CAACW,QAAR,CAAiBJ,IAAjB,CAAJ,EACA;AACEP,MAAAA,OAAO,CAACY,IAAR,CAAaL,IAAb;AACD;AACF,GAPD;AAQAP,EAAAA,OAAO,GAAEA,OAAO,CAACa,IAAR,EAAT;;AAEA,QAAMC,iBAAiB,GAAEP,IAAD,IAAQ;AAC9B;AAEAN,IAAAA,iBAAiB,GAAGF,KAAK,CAACK,QAAN,CAAeW,MAAf,CAAuBC,EAAD,IAAQ;AAChD,UAAIC,OAAO,GAAG,IAAIT,IAAJ,CAASQ,EAAE,CAACP,IAAZ,EAAkBC,WAAlB,EAAd;AACA,aAAOO,OAAO,IAAIV,IAAlB;AACD,KAHmB,CAApB;AAIAJ,IAAAA,YAAY,CAACI,IAAD,CAAZ;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYlB,iBAAZ;AACD,GATD;;AAWA,sBAGE;AAAA,4BAAK,QAAC,aAAD;AAAe,MAAA,OAAO,EAAED,OAAxB;AAAiC,MAAA,eAAe,EAAEc;AAAlD;AAAA;AAAA;AAAA;AAAA,YAAL,eACA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA,6BAEE;AAAA,kBACGb,iBAAiB,CAACmB,GAAlB,CAAuBJ,EAAD,IAAQ;AAC7B,8BACE;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,IAAI,EAAEA,EAAE,CAACP,IADX;AAEE,cAAA,KAAK,EAAEY,MAAM,CAACL,EAAE,CAACM,KAAJ,CAAN,CAAiBC,WAAjB,EAFT;AAGE,cAAA,MAAM,EAAEP,EAAE,CAACQ;AAHb;AAAA;AAAA;AAAA;AAAA;AADF,aAASR,EAAE,CAACS,EAAZ;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAsBD,CAhDD;;GAAM3B,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import ExpenseItem from \"../expense-item/ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../expense-item/Card.js\";\r\nimport ExpenseFilter from \"../expenses-filter/ExpenseFilter\";\r\nimport {useState} from \"react\"\r\n\r\nconst Expenses=(props)=> {\r\n\r\n  let options = []\r\n  let filtered_expenses = []\r\n  const[statesman,setStatesMan] = useState(' ')\r\n  props.expenses.forEach(element => {\r\n    let year = new Date(element.date).getFullYear()\r\n    \r\n    if(!options.includes(year))\r\n    {\r\n      options.push(year);\r\n    }\r\n  });\r\n  options =options.sort();\r\n\r\n  const FilterYearHandler=(year)=>{\r\n    //props.yearChanged(year)\r\n\r\n    filtered_expenses = props.expenses.filter((el) => {\r\n      let el_year = new Date(el.date).getFullYear();\r\n      return el_year == year;\r\n    });\r\n    setStatesMan(year)\r\n    console.log(filtered_expenses)\r\n  }\r\n \r\n  return (\r\n    \r\n\r\n    <div><ExpenseFilter options={options} getYearToFilter={FilterYearHandler}></ExpenseFilter>\r\n    <Card className=\"expenses-container\">\r\n      \r\n      <ol>\r\n        {filtered_expenses.map((el) => {\r\n          return (\r\n            <li key={el.id}>\r\n              <ExpenseItem\r\n                date={el.date}\r\n                title={String(el.title).toLowerCase()}\r\n                amount={el.amount}\r\n              ></ExpenseItem>\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}